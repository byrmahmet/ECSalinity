<h1 id="summary">Summary</h1>

<table><thead>
<tr>
<th>Members</th>
<th>Descriptions</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a640dfe86e985335227741fb4a5fa8589"><code class="prettyprint">EC_SALINITY</code></a></td>
<td>EC Salinity probe I2C address</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a67c9c3b981221b2afd622643988ee12c"><code class="prettyprint">EC_MEASURE_EC</code></a></td>
<td>Command to start an EC measure</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ace5645a9b9f39b552abbfbc0a6c215fd"><code class="prettyprint">EC_MEASURE_TEMP</code></a></td>
<td>Command to measure temperature</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1adb0e1b956d582d6f490d48f173f3f2b0"><code class="prettyprint">EC_CALIBRATE_PROBE</code></a></td>
<td>Command to calibrate the probe</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a0a808b4c22297cfe631864593bd2138b"><code class="prettyprint">EC_CALIBRATE_LOW</code></a></td>
<td>Command to calibrate the low point of the probe</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a882c5ec972030a5ead98ab6c396f5a00"><code class="prettyprint">EC_CALIBRATE_HIGH</code></a></td>
<td>Command to calibrate the high point of the probe</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1aead8f0055ef150518e0d8c3444badef6"><code class="prettyprint">EC_VERSION_REGISTER</code></a></td>
<td>version register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1abcf8cab5c40f6ca7ea42c3a875c348ff"><code class="prettyprint">EC_MS_REGISTER</code></a></td>
<td>mS register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a69e25ed3d1d30d47a43ae0f79dfdbb10"><code class="prettyprint">EC_TEMP_REGISTER</code></a></td>
<td>temperature in C register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a06e6eb8ce41f3c6f385a0c43b4b93b60"><code class="prettyprint">EC_K_REGISTER</code></a></td>
<td>cell constant register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1acf8f63a28ce390dcccd310edb4621e52"><code class="prettyprint">EC_SOLUTION_REGISTER</code></a></td>
<td>calibration solution register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a60c3bc8188b072f3988ace93a5db7c83"><code class="prettyprint">EC_TEMPCOEF_REGISTER</code></a></td>
<td>temperatue coefficient register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a281af18988e2218f0709c796776e544e"><code class="prettyprint">EC_CALIBRATE_REFHIGH_REGISTER</code></a></td>
<td>reference low register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1af6852c361b0a3eb4e2156c378e4d61c5"><code class="prettyprint">EC_CALIBRATE_REFLOW_REGISTER</code></a></td>
<td>reference high register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a9ffd369ac86a5b76dc5c496d93a09ba3"><code class="prettyprint">EC_CALIBRATE_READHIGH_REGISTER</code></a></td>
<td>reading low register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1afd50d1eff7732c37e3a13443ea4f8e40"><code class="prettyprint">EC_CALIBRATE_READLOW_REGISTER</code></a></td>
<td>reading high register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ae243d66ed1deefd16d8905013d77e1e8"><code class="prettyprint">EC_CALIBRATE_OFFSET_REGISTER</code></a></td>
<td>caliration offset</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a8b1ea9734a5570559b7246fbd8ae8fac"><code class="prettyprint">EC_SALINITY_PSU</code></a></td>
<td>Salinity register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ae17c781ddbe938029dca747dc9d1ca9c"><code class="prettyprint">EC_TEMP_COMPENSATION_REGISTER</code></a></td>
<td>temperature compensation register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ae14577084a91656b9b44259947240724"><code class="prettyprint">EC_ACCURACY_REGISTER</code></a></td>
<td>accuracy register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a96d0e0f5ca69db87691deedeb1891e2b"><code class="prettyprint">EC_CONFIG_REGISTER</code></a></td>
<td>config register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a8e5656adc5e79608360f7b04444bfc94"><code class="prettyprint">EC_TASK_REGISTER</code></a></td>
<td>task register</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ab365fbd21a5691127a7cac02aa2fd87b"><code class="prettyprint">EC_EC_MEASURMENT_TIME</code></a></td>
<td>delay between EC measurements</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a1b7ae8cd7cb6620f9bcc087a61176146"><code class="prettyprint">EC_TEMP_MEASURE_TIME</code></a></td>
<td>delay for temperature measurement</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a711cab6c24e67d703d6abd93cffc18e1"><code class="prettyprint">EC_CALIBRATE_DELAY</code></a></td>
<td>delay between EC calibration measurements</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a7843d8a0ae692bd63a9dac9c767cb3f1"><code class="prettyprint">EC_DUALPOINT_CONFIG_BIT</code></a></td>
<td>dual point config bit</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a0de7e993441fc3a1ecb4f0d50f19e02a"><code class="prettyprint">EC_TEMP_COMPENSATION_CONFIG_BIT</code></a></td>
<td>temperature compensation config bit</td>
</tr>
<tr>
<td><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ab25e1ec7973038c1ae1db1fd19eecc1b"><code class="prettyprint">PSU_TO_PPT_CONVERSION</code></a></td>
<td>conversion factor for PSU to PPT</td>
</tr>
<tr>
<td><code class="prettyprint">class</code><a href="#class_e_c___salinity"><code class="prettyprint">EC_Salinity</code></a></td>
<td>EC Salinity Class</td>
</tr>
</tbody></table>

<h2 id="members">Members</h2>

<h4 id="defineec_salinity"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a640dfe86e985335227741fb4a5fa8589"><code class="prettyprint">EC_SALINITY</code></a></h4>

<p>EC Salinity probe I2C address</p>

<h4 id="defineec_measure_ec"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a67c9c3b981221b2afd622643988ee12c"><code class="prettyprint">EC_MEASURE_EC</code></a></h4>

<p>Command to start an EC measure</p>

<h4 id="defineec_measure_temp"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ace5645a9b9f39b552abbfbc0a6c215fd"><code class="prettyprint">EC_MEASURE_TEMP</code></a></h4>

<p>Command to measure temperature</p>

<h4 id="defineec_calibrate_probe"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1adb0e1b956d582d6f490d48f173f3f2b0"><code class="prettyprint">EC_CALIBRATE_PROBE</code></a></h4>

<p>Command to calibrate the probe</p>

<h4 id="defineec_calibrate_low"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a0a808b4c22297cfe631864593bd2138b"><code class="prettyprint">EC_CALIBRATE_LOW</code></a></h4>

<p>Command to calibrate the low point of the probe</p>

<h4 id="defineec_calibrate_high"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a882c5ec972030a5ead98ab6c396f5a00"><code class="prettyprint">EC_CALIBRATE_HIGH</code></a></h4>

<p>Command to calibrate the high point of the probe</p>

<h4 id="defineec_version_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1aead8f0055ef150518e0d8c3444badef6"><code class="prettyprint">EC_VERSION_REGISTER</code></a></h4>

<p>version register</p>

<h4 id="defineec_ms_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1abcf8cab5c40f6ca7ea42c3a875c348ff"><code class="prettyprint">EC_MS_REGISTER</code></a></h4>

<p>mS register</p>

<h4 id="defineec_temp_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a69e25ed3d1d30d47a43ae0f79dfdbb10"><code class="prettyprint">EC_TEMP_REGISTER</code></a></h4>

<p>temperature in C register</p>

<h4 id="defineec_k_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a06e6eb8ce41f3c6f385a0c43b4b93b60"><code class="prettyprint">EC_K_REGISTER</code></a></h4>

<p>cell constant register</p>

<h4 id="defineec_solution_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1acf8f63a28ce390dcccd310edb4621e52"><code class="prettyprint">EC_SOLUTION_REGISTER</code></a></h4>

<p>calibration solution register</p>

<h4 id="defineec_tempcoef_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a60c3bc8188b072f3988ace93a5db7c83"><code class="prettyprint">EC_TEMPCOEF_REGISTER</code></a></h4>

<p>temperatue coefficient register</p>

<h4 id="defineec_calibrate_refhigh_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a281af18988e2218f0709c796776e544e"><code class="prettyprint">EC_CALIBRATE_REFHIGH_REGISTER</code></a></h4>

<p>reference low register</p>

<h4 id="defineec_calibrate_reflow_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1af6852c361b0a3eb4e2156c378e4d61c5"><code class="prettyprint">EC_CALIBRATE_REFLOW_REGISTER</code></a></h4>

<p>reference high register</p>

<h4 id="defineec_calibrate_readhigh_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a9ffd369ac86a5b76dc5c496d93a09ba3"><code class="prettyprint">EC_CALIBRATE_READHIGH_REGISTER</code></a></h4>

<p>reading low register</p>

<h4 id="defineec_calibrate_readlow_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1afd50d1eff7732c37e3a13443ea4f8e40"><code class="prettyprint">EC_CALIBRATE_READLOW_REGISTER</code></a></h4>

<p>reading high register</p>

<h4 id="defineec_calibrate_offset_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ae243d66ed1deefd16d8905013d77e1e8"><code class="prettyprint">EC_CALIBRATE_OFFSET_REGISTER</code></a></h4>

<p>caliration offset</p>

<h4 id="defineec_salinity_psu"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a8b1ea9734a5570559b7246fbd8ae8fac"><code class="prettyprint">EC_SALINITY_PSU</code></a></h4>

<p>Salinity register</p>

<h4 id="defineec_temp_compensation_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ae17c781ddbe938029dca747dc9d1ca9c"><code class="prettyprint">EC_TEMP_COMPENSATION_REGISTER</code></a></h4>

<p>temperature compensation register</p>

<h4 id="defineec_accuracy_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ae14577084a91656b9b44259947240724"><code class="prettyprint">EC_ACCURACY_REGISTER</code></a></h4>

<p>accuracy register</p>

<h4 id="defineec_config_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a96d0e0f5ca69db87691deedeb1891e2b"><code class="prettyprint">EC_CONFIG_REGISTER</code></a></h4>

<p>config register</p>

<h4 id="defineec_task_register"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a8e5656adc5e79608360f7b04444bfc94"><code class="prettyprint">EC_TASK_REGISTER</code></a></h4>

<p>task register</p>

<h4 id="defineec_ec_measurment_time"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ab365fbd21a5691127a7cac02aa2fd87b"><code class="prettyprint">EC_EC_MEASURMENT_TIME</code></a></h4>

<p>delay between EC measurements</p>

<h4 id="defineec_temp_measure_time"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a1b7ae8cd7cb6620f9bcc087a61176146"><code class="prettyprint">EC_TEMP_MEASURE_TIME</code></a></h4>

<p>delay for temperature measurement</p>

<h4 id="defineec_calibrate_delay"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a711cab6c24e67d703d6abd93cffc18e1"><code class="prettyprint">EC_CALIBRATE_DELAY</code></a></h4>

<p>delay between EC calibration measurements</p>

<h4 id="defineec_dualpoint_config_bit"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a7843d8a0ae692bd63a9dac9c767cb3f1"><code class="prettyprint">EC_DUALPOINT_CONFIG_BIT</code></a></h4>

<p>dual point config bit</p>

<h4 id="defineec_temp_compensation_config_bit"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1a0de7e993441fc3a1ecb4f0d50f19e02a"><code class="prettyprint">EC_TEMP_COMPENSATION_CONFIG_BIT</code></a></h4>

<p>temperature compensation config bit</p>

<h4 id="definepsu_to_ppt_conversion"><code class="prettyprint">define</code><a href="#_e_c_salinity_8h_1ab25e1ec7973038c1ae1db1fd19eecc1b"><code class="prettyprint">PSU_TO_PPT_CONVERSION</code></a></h4>

<p>conversion factor for PSU to PPT</p>

<h1 id="class-ec_salinity">class <code class="prettyprint">EC_Salinity</code></h1>

<h2 id="members">Members</h2>

<h2 id="s">S</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1af3274d7a8037d1eee998d1dd3f50ce91"><code class="prettyprint">S</code></a>
</br></p>

<p>EC in Siemens</p>

<h2 id="ms">mS</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1ad835b40db253e61ad5898414eff3fc60"><code class="prettyprint">mS</code></a>
</br></p>

<p>EC in milli-Siemens</p>

<h2 id="us">uS</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a7d5cf279e9c0cd10cc3ced6d30d8f4ad"><code class="prettyprint">uS</code></a>
</br></p>

<p>EC in micro-Siemens</p>

<h2 id="ppm_500">PPM_500</h2>

<p><code class="prettyprint">public long</code><a href="#class_e_c___salinity_1a05a42f334f67a657136d033a0a1d69d6"><code class="prettyprint">PPM_500</code></a>
</br></p>

<p>Parts per million using 500 as a multiplier</p>

<h2 id="ppm_640">PPM_640</h2>

<p><code class="prettyprint">public long</code><a href="#class_e_c___salinity_1ae83ab780c294750919079477b871b2c9"><code class="prettyprint">PPM_640</code></a>
</br></p>

<p>Parts per million using 640 as a multiplier</p>

<h2 id="ppm_700">PPM_700</h2>

<p><code class="prettyprint">public long</code><a href="#class_e_c___salinity_1a95969d31584e0afc0128909dfd39b932"><code class="prettyprint">PPM_700</code></a>
</br></p>

<p>Parts per million using 700 as a multiplier</p>

<h2 id="salinitypsu">salinityPSU</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a7e1c505419b7e8b2b9a4cb277701b6a3"><code class="prettyprint">salinityPSU</code></a>
</br></p>

<p>Salinity measured practical salinity units</p>

<h2 id="salinityppt">salinityPPT</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a99faa627b03c807a535b956e98eec46e"><code class="prettyprint">salinityPPT</code></a>
</br></p>

<p>Salinity measured parts per thousand</p>

<h2 id="salinityppm">salinityPPM</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1af2ebd67da491f816329f222a7d382ad8"><code class="prettyprint">salinityPPM</code></a>
</br></p>

<p>Salinity measured parts per million</p>

<h2 id="tempc">tempC</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a2733418c3eee1adaf51a5edd5aaf20fa"><code class="prettyprint">tempC</code></a>
</br></p>

<p>Temperature in C</p>

<h2 id="tempf">tempF</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a7abb032fef7156b3b99396ecf39cd731"><code class="prettyprint">tempF</code></a>
</br></p>

<p>Temperature in F</p>

<h2 id="ec_salinity">EC_Salinity</h2>

<p><code class="prettyprint">public</code><a href="#class_e_c___salinity_1ab1421417cd2bbd92dad82b315128a946"><code class="prettyprint">EC_Salinity</code></a><code class="prettyprint">()</code>
</br></p>

<p>Class constructor.</p>

<h2 id="ec_salinity">~EC_Salinity</h2>

<p><code class="prettyprint">public</code><a href="#class_e_c___salinity_1a4f5b2354fb443a5928d2ec544472a4af"><code class="prettyprint">~EC_Salinity</code></a><code class="prettyprint">()</code>
</br></p>

<p>Class destructor.</p>

<h2 id="measureec">measureEC</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1ac5eb05c6d52dcba0bb2d4785a51659bc"><code class="prettyprint">measureEC</code></a><code class="prettyprint">(float tempCoefficient)</code>
</br></p>

<p>Starts an EC measurement.</p>

<p>The device starst an EC measurement. The accuracy can be specified in <a href="#class_e_c___salinity_1aaaaab96ad13c1f55772256f31d9de8de">EC_Salinity::setAccuracy</a>. </p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">tempCoefficient</code></td>
<td>the coefficient used to compensate for temperature.</td>
</tr>
</tbody></table>

<p><a href="#class_e_c___salinity_1a7d5cf279e9c0cd10cc3ced6d30d8f4ad">uS</a>, <a href="#class_e_c___salinity_1ad835b40db253e61ad5898414eff3fc60">mS</a>, <a href="#class_e_c___salinity_1af3274d7a8037d1eee998d1dd3f50ce91">S</a>, <a href="#class_e_c___salinity_1a2733418c3eee1adaf51a5edd5aaf20fa">tempC</a>, <a href="#class_e_c___salinity_1a7abb032fef7156b3b99396ecf39cd731">tempF</a>, <a href="#class_e_c___salinity_1a05a42f334f67a657136d033a0a1d69d6">PPM_500</a>, <a href="#class_e_c___salinity_1ae83ab780c294750919079477b871b2c9">PPM_640</a>, <a href="#class_e_c___salinity_1a95969d31584e0afc0128909dfd39b932">PPM_700</a>, <a href="#class_e_c___salinity_1af2ebd67da491f816329f222a7d382ad8">salinityPPM</a>, <a href="#class_e_c___salinity_1a99faa627b03c807a535b956e98eec46e">salinityPPT</a>, and <a href="#class_e_c___salinity_1a7e1c505419b7e8b2b9a4cb277701b6a3">salinityPSU</a> are updated </p>

<p>PPM is not valid if salinity is being measured </p>

<p><strong>Returns</strong>: milli-Siemens</p>

<h2 id="measureec">measureEC</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a754320b158a17fe3b37d0c36ec168695"><code class="prettyprint">measureEC</code></a><code class="prettyprint">()</code>
</br></p>

<p>Convenience function.</p>

<p>Calls <a href="#class_e_c___salinity_1ac5eb05c6d52dcba0bb2d4785a51659bc">EC_Salinity::measureEC</a>(<a href="#class_e_c___salinity_1aa5a1d7c5924a3c09be48911756b8c64a">EC_Salinity::tempCoefEC</a>) 
<strong>Returns</strong>: salinity in PSU</p>

<h2 id="measuresalinity">measureSalinity</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a57ce8b1e6d96902eb1ad8d1eefadcbeb"><code class="prettyprint">measureSalinity</code></a><code class="prettyprint">()</code>
</br></p>

<p>Convenience function.</p>

<p>Calls <a href="#class_e_c___salinity_1ac5eb05c6d52dcba0bb2d4785a51659bc">EC_Salinity::measureEC</a>(<a href="#class_e_c___salinity_1a6dece08b650de2f4eecf7822dbaee34b">EC_Salinity::tempCoefSalinity</a>) 
<strong>Returns</strong>: salinity in PSU</p>

<h2 id="measuretemp">measureTemp</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1ad0a0956675fc359950d1359927e248fd"><code class="prettyprint">measureTemp</code></a><code class="prettyprint">()</code>
</br></p>

<p>Starts a temperature measurement.</p>

<p><a href="#class_e_c___salinity_1a2733418c3eee1adaf51a5edd5aaf20fa">tempC</a> and <a href="#class_e_c___salinity_1a7abb032fef7156b3b99396ecf39cd731">tempF</a> are updated </p>

<p>A value of -127 means the device is not connected. </p>

<p><strong>Returns</strong>: temperature in C</p>

<h2 id="calibrateprobe">calibrateProbe</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1a33ffb6fb52b63b928ab45fb98c477826"><code class="prettyprint">calibrateProbe</code></a><code class="prettyprint">(float solutionEC,float tempCoef)</code>
</br></p>

<p>Calibrates the connected probe and saves the result in EEPROM.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">solutionEC</code></td>
<td>the EC of the calibration solution in mS</td>
</tr>
</tbody></table>

<p><code class="prettyprint">tempCoef</code> | the coefficient used to calibrate the probe </p>

<p>cell constant will be saved in the device&rsquo;s EEPROM and used automatically thereafter</p>

<h2 id="calibrateprobelow">calibrateProbeLow</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1a89cb728b13b422baa24729c386ae66b2"><code class="prettyprint">calibrateProbeLow</code></a><code class="prettyprint">(float solutionEC,float tempCoef)</code>
</br></p>

<p>Calibrates the dual-point values for the low reading and saves them in the devices&rsquo;s EEPROM.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">solutionEC</code></td>
<td>the EC of the calibration solution in mS</td>
</tr>
</tbody></table>

<p><code class="prettyprint">tempCoef</code> | the coefficient used to calibrate the probe</p>

<h2 id="calibrateprobehigh">calibrateProbeHigh</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1a339b7cfaf85d56946aaa8b09e649eec0"><code class="prettyprint">calibrateProbeHigh</code></a><code class="prettyprint">(float solutionEC,float tempCoef)</code>
</br></p>

<p>Calibrates the dual-point values for the high reading and saves them in the devices&rsquo;s EEPROM.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">solutionEC</code></td>
<td>the EC of the calibration solution in mS</td>
</tr>
</tbody></table>

<p><code class="prettyprint">tempCoef</code> | the coefficient used to calibrate the probe</p>

<h2 id="setdualpointcalibration">setDualPointCalibration</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1af3cd5b404706edec78f1b117b8e9d6dd"><code class="prettyprint">setDualPointCalibration</code></a><code class="prettyprint">(float refLow,float refHigh,float readLow,float readHigh)</code>
</br></p>

<p>Sets all the values for dual point calibration and saves them in the devices&rsquo;s EEPROM.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">refLow</code></td>
<td>the reference low point</td>
</tr>
</tbody></table>

<p><code class="prettyprint">refHigh</code> | the reference high point </p>

<p><code class="prettyprint">readLow</code> | the measured low point in mS </p>

<p><code class="prettyprint">readHigh</code> | the measured high point in mS</p>

<h2 id="setk">setK</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1abfb9db695342135fe3c1d9e017099d01"><code class="prettyprint">setK</code></a><code class="prettyprint">(float k)</code>
</br></p>

<p>Updates the device with a new cell constant and saves it in EEPROM.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">k</code></td>
<td>the new cell constant</td>
</tr>
</tbody></table>

<h2 id="getk">getK</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a982b424d2ddc77d3b46bea505acf3bf5"><code class="prettyprint">getK</code></a><code class="prettyprint">()</code>
</br></p>

<p>Retrieves the cell constant from the device.</p>

<p><strong>Returns</strong>: the new cell constant</p>

<h2 id="setaccuracy">setAccuracy</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1aaaaab96ad13c1f55772256f31d9de8de"><code class="prettyprint">setAccuracy</code></a><code class="prettyprint">(byte b)</code>
</br></p>

<p>Configures the accuracy of the device.</p>

<p>The device maintains a running median of values. It throws out the top and bottom third of values, then averages the middle third together to return a single value. The accuracy incrases with a high number. It must be evenly divisible by 3. </p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">b</code></td>
<td>accuracy of the device</td>
</tr>
</tbody></table>

<h2 id="getaccuracy">getAccuracy</h2>

<p><code class="prettyprint">public byte</code><a href="#class_e_c___salinity_1a7bdd48a6f3f9a68fd94a39fb4cb274a1"><code class="prettyprint">getAccuracy</code></a><code class="prettyprint">()</code>
</br></p>

<p>Retrieves the accuracy configuration of the device.</p>

<p><strong>Returns</strong>: accuracy</p>

<h2 id="reset">reset</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1a9d0691335001b2fe878c72dd60bcebc9"><code class="prettyprint">reset</code></a><code class="prettyprint">()</code>
</br></p>

<p>Resets all the stored calibration information.</p>

<h2 id="settempconstant">setTempConstant</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1a6afe24ed690b92259a8c5af1a91688a0"><code class="prettyprint">setTempConstant</code></a><code class="prettyprint">(byte b)</code>
</br></p>

<p>Configures device to use the provided temperature constant.</p>

<p>By default, the temperature constant is set to 0xFF which instructs the actual temperature to be used for temperature compensation, however any number can be specified. To use the actual temperature, restore the value to 0xFF. </p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">b</code></td>
<td>the temperature to use for compensation</td>
</tr>
</tbody></table>

<h2 id="gettempconstant">getTempConstant</h2>

<p><code class="prettyprint">public byte</code><a href="#class_e_c___salinity_1a706c795bcde429e780a07247f7bacbc6"><code class="prettyprint">getTempConstant</code></a><code class="prettyprint">()</code>
</br></p>

<p>Retrieves the temperature constant.</p>

<p><strong>Returns</strong>: the temperature to used for compensation</p>

<h2 id="usetemperaturecompensation">useTemperatureCompensation</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1a826a26a7b0b6113089412bb0cf841367"><code class="prettyprint">useTemperatureCompensation</code></a><code class="prettyprint">(bool b)</code>
</br></p>

<p>Configures device to use temperature compensation or not.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">b</code></td>
<td>true for compensation, false to not use it</td>
</tr>
</tbody></table>

<h2 id="usingtemperaturecompensation">usingTemperatureCompensation</h2>

<p><code class="prettyprint">public bool</code><a href="#class_e_c___salinity_1a21e07bf976f2ef15680fadac5da4c8f8"><code class="prettyprint">usingTemperatureCompensation</code></a><code class="prettyprint">()</code>
</br></p>

<p>Determines if temperature compensation is being used.</p>

<p><strong>Returns</strong>: true if using compensation, false otherwise</p>

<h2 id="usedualpoint">useDualPoint</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1ad59943579cc4e237cbe48a2067b99e65"><code class="prettyprint">useDualPoint</code></a><code class="prettyprint">(bool b)</code>
</br></p>

<p>Configures device to use dual-point calibration.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">b</code></td>
<td>true for yes, false for no</td>
</tr>
</tbody></table>

<h2 id="usingdualpoint">usingDualPoint</h2>

<p><code class="prettyprint">public bool</code><a href="#class_e_c___salinity_1a2c5a7a1fe2c32c514cadd85e90f7249b"><code class="prettyprint">usingDualPoint</code></a><code class="prettyprint">()</code>
</br></p>

<p>Determines if dual point calibration is being used.</p>

<p><strong>Returns</strong>: true if using compensation, false otherwise</p>

<h2 id="getcalibratehigh">getCalibrateHigh</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a77c403d82647d21a5540bc9e642e9627"><code class="prettyprint">getCalibrateHigh</code></a><code class="prettyprint">()</code>
</br></p>

<p>Retrieves the dual-point calibration high value.</p>

<p><strong>Returns</strong>: the dual-point calibration high value</p>

<h2 id="getcalibratelow">getCalibrateLow</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a793511d6d72e865d3a603cbfe2e89cc1"><code class="prettyprint">getCalibrateLow</code></a><code class="prettyprint">()</code>
</br></p>

<p>Retrieves the dual-point calibration low value.</p>

<p><strong>Returns</strong>: the dual-point calibration low value</p>

<h2 id="getcalibratehighreading">getCalibrateHighReading</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a2beee7c1ce99dd5af7301991152b445c"><code class="prettyprint">getCalibrateHighReading</code></a><code class="prettyprint">()</code>
</br></p>

<p>Retrieves the dual-point calibration reading high value.</p>

<p><strong>Returns</strong>: the dual-point calibration high value</p>

<h2 id="getcalibratelowreading">getCalibrateLowReading</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a376524d70ae1b9a916e1a23e221f859c"><code class="prettyprint">getCalibrateLowReading</code></a><code class="prettyprint">()</code>
</br></p>

<p>Retrieves the dual-point calibration reading low value.</p>

<p><strong>Returns</strong>: the dual-point calibration low value</p>

<h2 id="setcalibrateoffset">setCalibrateOffset</h2>

<p><code class="prettyprint">public void</code><a href="#class_e_c___salinity_1aae1598cf128c59aebd8938bd7812fd1e"><code class="prettyprint">setCalibrateOffset</code></a><code class="prettyprint">(float offset)</code>
</br></p>

<p>Sets the single point offset value.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">offset</code></td>
<td>single point offset value</td>
</tr>
</tbody></table>

<h2 id="getcalibrateoffset">getCalibrateOffset</h2>

<p><code class="prettyprint">public float</code><a href="#class_e_c___salinity_1a59b3e933ae3ec3667c621bc933f601d7"><code class="prettyprint">getCalibrateOffset</code></a><code class="prettyprint">()</code>
</br></p>

<p>Retrieves the single point offset value.</p>

<p><strong>Returns</strong>: single point offset value</p>

<h2 id="getversion">getVersion</h2>

<p><code class="prettyprint">public byte</code><a href="#class_e_c___salinity_1ae5854663a77aa407db47c08cda5b715d"><code class="prettyprint">getVersion</code></a><code class="prettyprint">()</code>
</br></p>

<p>Retrieves the firmware version of the device.</p>

<p><strong>Returns</strong>: version of firmware</p>

<p>Generated by <a href="https://sourcey.com/moxygen">Moxygen</a></p>
